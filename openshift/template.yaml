apiVersion: v1
kind: Template
labels:
  template: bayesian-chester
metadata:
  name: bayesian-chester
  annotations:
    description: bayesian-chester
objects:
- apiVersion: v1
  kind: DeploymentConfig
  metadata:
    labels:
      service: bayesian-chester-${CHESTER_SCORING_REGION}
    name: bayesian-chester-${CHESTER_SCORING_REGION}
  spec:
    replicas: 1
    selector:
      service: bayesian-chester-${CHESTER_SCORING_REGION}
    template:
      metadata:
        labels:
          service: bayesian-chester-${CHESTER_SCORING_REGION}
      spec:
        containers:
        - command:
          - /bin/entrypoint.sh
          env:
          - name: DEPLOYMENT_PREFIX
            valueFrom:
              configMapKeyRef:
                name: bayesian-config
                key: deployment-prefix
          - name: SERVICE_PORT
            value: "6006"
          - name: SERVICE_TIMEOUT
            value: "900"
          - name: CHESTER_SCORING_REGION
            value: "${CHESTER_SCORING_REGION}"
          - name: AWS_S3_ACCESS_KEY_ID
            valueFrom:
              secretKeyRef:
                key: s3-access-key-id
                name: aws
          - name: AWS_S3_SECRET_ACCESS_KEY
            valueFrom:
              secretKeyRef:
                key: s3-secret-access-key
                name: aws
          - name: FLASK_LOGGING_LEVEL
            value: ${FLASK_LOGGING_LEVEL}
          name: bayesian-chester
          image: "${DOCKER_REGISTRY}/${DOCKER_IMAGE}:${IMAGE_TAG}"
          ports:
          - containerPort: 6006
          livenessProbe:
            httpGet:
              path: /api/v1/liveness
              port: 6006
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          readinessProbe:
            httpGet:
              path: /api/v1/readiness
              port: 6006
            initialDelaySeconds: 15
            periodSeconds: 60
            timeoutSeconds: 30
          resources:
            requests:
              cpu: ${CPU_REQUEST}
              memory: ${MEMORY_REQUEST}
            limits:
              cpu: ${CPU_LIMIT}
              memory: ${MEMORY_LIMIT}
- apiVersion: v1
  kind: Service
  metadata:
    labels:
      service: bayesian-chester-${CHESTER_SCORING_REGION}
    name: bayesian-chester-${CHESTER_SCORING_REGION}
  spec:
    ports:
    - port: 6006
      targetPort: 0
    selector:
      service: bayesian-chester-${CHESTER_SCORING_REGION}

parameters:
- description: CPU request
  displayName: CPU request
  required: true
  name: CPU_REQUEST
  value: "300m"

- description: CPU limit
  displayName: CPU limit
  required: true
  name: CPU_LIMIT
  value: "300m"

- description: Memory request
  displayName: Memory request
  required: true
  name: MEMORY_REQUEST
  value: "1Gi"

- description: Memory limit
  displayName: Memory limit
  required: true
  name: MEMORY_LIMIT
  value: "1Gi"

- description: Docker registry where the image is
  displayName: Docker registry
  required: true
  name: DOCKER_REGISTRY
  value: "registry.devshift.net"

- description: Docker image to use
  displayName: Docker image
  required: true
  name: DOCKER_IMAGE
  value: "fabric8-analytics/f8a-chester"

- description: Image tag
  displayName: Image tag
  required: true
  name: IMAGE_TAG
  value: "latest"

- description: Chester Scoring Region - npm
  displayName: Chester Scoring Region
  required: true
  name: CHESTER_SCORING_REGION
  value: "npm"

- description: "Flask logging level (see: https://docs.python.org/3/library/logging.html#levels)"
  displayName: Flask logging level
  required: false
  name: FLASK_LOGGING_LEVEL
  value: "WARNING"
